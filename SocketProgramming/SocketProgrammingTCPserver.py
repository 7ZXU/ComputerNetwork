# -*- coding: utf-8 -*-
"""SocketProgrammingTCPserver.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z07OU64e5VadWuBcFYXpQsiva_dvFa33

#**1Socket programming exmaple : TCP server**
##**1.1 Initialize**
"""

from socket import * #import socket

serverPort = 12000 #server is listening port:12000

"""##**1.2 Create socket**"""

serverSocket = socket(AF_INET, SOCK_STREAM) #(address family, socket type) 
# AF_INET # underlying networkd is using IPv4
# SOCK_STREAM # TCP socket

"""##**1.3 Bind with a port and listen**"""

serverSocket.bind(('', serverPort)) # 1200 포트의 request만 listen 하겠다는 뜻

serverSocket.listen(1)
print("The server is ready to receive.") # listen queue에 하나 이상 request 존재하면 받을 준비가 됐다고 출력

"""##**1.4 Start loop to wait for a client connection and its message**

클라이언트가 메시지 보낼 때까지 서버는 기다림
"""

# accept()를 severSocket에 만든다 # new socket(connectionSocket)을 서버에 만든다 
# clinetAdress에 request source address(clinet IP+port number) 대입
# hand-shaking 이후 -> clientSocket(client) connectionSocket(server) 사이에 TCP connection을 만든다
# TCP connection이 만들어지면 데이터 전송이 가능하다

# connectionSocket에 데이터(character) 전송된 이후
# 변수 message <- 데이터(character) 삽입
# recv(2048) # 버퍼크기 2048만큼 recv에 할당한다

# decode() # convert message byte -> string
# decode.upper() # capitalize string

# encode() # string -> byte

try:
    while True:
        connectionSocket, clinetAdress = serverSocket.accept()
        message = connectionSocket.recv(2048)
        modifiedMessage = message.decode().upper()
        connectionSocket.send(modifiedMessage.encode())
        connectionSocket.close()
except KeyboardInterrupt:
    print("Press Ctrl-C to terminate while statement")
    pass
